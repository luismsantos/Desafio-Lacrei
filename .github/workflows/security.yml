name: Security Scan

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '*.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '*.md'
  schedule:
    # Executa toda segunda-feira √†s 9h
    - cron: '0 9 * * 1'

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  security-scan:
    name: üîí Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install Poetry
      uses: snok/install-poetry@v1.4.1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Install dependencies
      run: poetry install --no-interaction
    
    - name: Run Safety scan
      run: |
        poetry add --group dev safety
        # Use the new scan command instead of deprecated check
        # Ignore CVE-2024-22513 for djangorestframework-simplejwt as it's a false positive for version 5.5.1
        poetry run safety scan --ignore 66963 || true
    
    - name: Run Bandit security linter
      run: |
        poetry add --group dev bandit
        poetry run bandit -r . -f json -o bandit-report.json
    
    - name: Upload Bandit report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bandit-report
        path: bandit-report.json
    
    - name: Run pip-audit
      run: |
        poetry add --group dev pip-audit
        poetry run pip-audit

  docker-security:
    name: üê≥ Docker Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Build Docker image
      run: docker build -t desafio-lacrei-security-scan .
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'desafio-lacrei-security-scan'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      continue-on-error: true
      with:
        sarif_file: 'trivy-results.sarif'
